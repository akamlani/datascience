print(nrow(a))
}
a <- data.frame()
for(i in 1:5) {
a[i] <- filter_outliers(X[1:30*i,])
print(nrow(a))
}
a
a <- data.frame()
for(i in 1:2) {
a[i] <- filter_outliers(X[1:30*i,])
print(nrow(a))
}
a <- data.frame()
for(i in 1:2) {
a$i <- filter_outliers(X[1:30*i,])
print(nrow(a))
}
a <- list()
for(i in 1:2) {
a[length(a)+1] <- filter_outliers(X[1:30*i,])
print(nrow(a))
}
a <- list()
for(i in 1:2) {
a[i] <- filter_outliers(X[1:30*i,])
print(nrow(a))
}
a <- list()
for(i in 1:2) {
a[1] <- filter_outliers(X[1:30*i,])
print(nrow(a))
}
a <- list()
for(i in 1:2) {
a[1:10] <- filter_outliers(X[1:30*i,])
print(nrow(a))
}
a
a <- list()
for(i in 1:2) {
a[1] <- filter_outliers(X[1:30*i,])
#print(nrow(a))
}
a <- list()
for(i in 1:2) {
a[1:10*i] <- filter_outliers(X[1:30*i,])
#print(nrow(a))
}
length(a)
a <- list()
for(i in 1:2) {
a[1:10*i] <- filter_outliers(X[1:30*i,])
#print(nrow(a))
}
a
a <- list()
for(i in 1:2) {
print(i)
a[1:10*i] <- filter_outliers(X[1:30*i,])
#print(nrow(a))
}
?seq
for (i in seq(1:150, by=30) )
{
print(i)
}
for (i in seq(1:150, by=30) )
{
print(i)
}
for (i in seq(1,150, by=30) )
{
print(i)
}
for (i in seq(1,150, by=30) )
{
print((c(i,i+30-1)))
}
a <- list()
for (i in seq(1,30, by=30) )
{
a[length(a) +1] <- filter_outliers(X[i:30*i,])
print(c(i,30*i))
}
a <- list()
for (i in seq(1,30, by=30) )
{
a[i:10*i] <- filter_outliers(X[i:30*i,])
print(c(i,30*i))
}
a
#a <- list()
for (i in seq(1,30, by=30) )
{
a <- filter_outliers(X[i:30*i,])
a<- as.data.frame(a)
print(c(i,30*i))
print(a)
}
b <- data.frame()
for (i in seq(1,60, by=30) )
{
a <- filter_outliers(X[i:30*i,])
a <- as.data.frame(a)
print(c(i,30*i))
print(a)
rbind(b, a)
}
b
b <- data.frame()
for (i in seq(1,30, by=30) )
{
a <- filter_outliers(X[i:30*i,])
a <- as.data.frame(a)
print(c(i,30*i))
print(a)
rbind(b, a)
}
b
b <- data.frame()
for (i in seq(1,30, by=30) )
{
a <- filter_outliers(X[i:30*i,])
a <- as.data.frame(a)
print(c(i,30*i))
print(a)
b <- rbind(b, a)
}
b
tostring(1/30)
toString(1/30)
toString(round(1/30))
toString(round(30/30))
toString(round(60/30))
b <- data.frame()
for (i in seq(1,30, by=30) )
{
a <- filter_outliers(X[i:30*i,])
a <- as.data.frame(a)
a$cluster <- "Ci_" + toString(round(i/30))
print(c(i,30*i))
print(a)
b <- rbind(b, a)
}
b <- data.frame()
for (i in seq(1,30, by=30) )
{
a <- filter_outliers(X[i:30*i,])
a <- as.data.frame(a)
a$cluster <- toString(round(i/30))
print(c(i,30*i))
print(a)
b <- rbind(b, a)
}
b <- data.frame()
for (i in seq(1,60, by=30) )
{
a <- filter_outliers(X[i:30*i,])
a <- as.data.frame(a)
a$cluster <- toString(round(i/30))
print(c(i,30*i))
print(a)
b <- rbind(b, a)
}
b <- data.frame()
for (i in seq(1,60, by=30) )
{
a <- filter_outliers(X[i:30*i,])
a <- as.data.frame(a)
a$cluster <- i#toString(round(i/30))
print(c(i,30*i))
print(a)
b <- rbind(b, a)
}
b <- data.frame()
for (i in seq(1,60, by=30) )
{
a <- filter_outliers(X[i:30*i,])
a <- as.data.frame(a)
#a$cluster <- i#toString(round(i/30))
print(c(i,30*i))
print(a)
b <- rbind(b, a)
}
b
nrow(b)
b <- data.frame()
for (i in seq(1,60, by=30) )
{
a <- filter_outliers(X[i:30*i,])
a <- as.data.frame(a)
b <- rbind(b, a)
#a$cluster <- i#toString(round(i/30))
print(c(i,30*i))
print(a)
print(b)
}
b <- data.frame()
for (i in seq(1,60, by=30) )
{
a <- filter_outliers(X[i:30*i,])
a <- as.data.frame(a)
b <- rbind(b, a)
#a$cluster <- i#toString(round(i/30))
print(c(i,i+30))
print(a)
print(b)
}
b <- data.frame()
for (i in seq(1,60, by=30) )
{
a <- filter_outliers(X[i:30*i,])
a <- as.data.frame(a)
b <- rbind(b, a)
#a$cluster <- i#toString(round(i/30))
print(c(i,i+30-1))
print(a)
print(b)
}
b <- data.frame()
for (i in seq(1,60, by=30) )
{
a <- filter_outliers(X[i:i+30-1,])
a <- as.data.frame(a)
b <- rbind(b, a)
#a$cluster <- i#toString(round(i/30))
print(c(i,i+30-1))
print(a)
print(b)
}
b <- data.frame()
for (i in seq(1,60, by=30) )
{
a <- filter_outliers(X[i:30,])
a <- as.data.frame(a)
b <- rbind(b, a)
#a$cluster <- i#toString(round(i/30))
print(c(i,i+30-1))
print(a)
print(b)
}
b <- data.frame()
for (i in seq(1,60, by=30) )
{
a <- filter_outliers(X[30:60,])
a <- as.data.frame(a)
b <- rbind(b, a)
#a$cluster <- i#toString(round(i/30))
print(c(i,i+30-1))
print(a)
print(b)
}
b <- data.frame()
for (i in seq(1,30, by=30) )
{
a <- filter_outliers(X[i:i+30-i,])
a <- as.data.frame(a)
b <- rbind(b, a)
#a$cluster <- i#toString(round(i/30))
print(c(i,i+30-1))
print(a)
print(b)
}
b <- data.frame()
for (i in seq(1,30, by=30) )
{
a <- filter_outliers(X[i:i+30-1,])
a <- as.data.frame(a)
b <- rbind(b, a)
#a$cluster <- i#toString(round(i/30))
print(c(i,i+30-1))
print(a)
print(b)
}
b <- data.frame()
for (i in seq(1,30, by=30) )
{
a <- filter_outliers(X[i:i+(30-1),])
a <- as.data.frame(a)
b <- rbind(b, a)
#a$cluster <- i#toString(round(i/30))
print(c(i,i+30-1))
print(a)
print(b)
}
b <- data.frame()
for (i in seq(1,30, by=30) )
{
a <- filter_outliers(X[i:(i+(30-1)),])
a <- as.data.frame(a)
b <- rbind(b, a)
#a$cluster <- i#toString(round(i/30))
print(c(i,i+30-1))
print(a)
print(b)
}
b <- data.frame()
for (i in seq(1,60, by=30) )
{
a <- filter_outliers(X[i:(i+(30-1)),])
a <- as.data.frame(a)
b <- rbind(b, a)
#a$cluster <- i#toString(round(i/30))
print(c(i,i+30-1))
print(a)
print(b)
}
b <- data.frame()
for (i in seq(1,60, by=30) )
{
a <- filter_outliers(X[i:(i+(30-1)),])
a <- as.data.frame(a)
a$cluster <- i#toString(round(i/30))
b <- rbind(b, a)
print(c(i,i+30-1))
print(a)
print(b)
}
b <- data.frame()
for (i in seq(1,60, by=30) )
{
a <- filter_outliers(X[i:(i+(30-1)),])
a <- as.data.frame(a)
a$cluster <- toString(round(i/30))
b <- rbind(b, a)
print(c(i,i+30-1))
print(a)
print(b)
}
b <- data.frame()
for (i in seq(1,60, by=30) )
{
a <- filter_outliers(X[i:(i+(30-1)),])
a <- as.data.frame(a)
a$cluster <- toString(round(i/30)+1)
b <- rbind(b, a)
print(c(i,i+30-1))
print(a)
print(b)
}
b <- data.frame()
for (i in seq(1,150, by=30) )
{
a <- filter_outliers(X[i:(i+(30-1)),])
a <- as.data.frame(a)
a$cluster <- toString(round(i/30)+1)
b <- rbind(b, a)
print(c(i,i+30-1))
print(a)
print(b)
}
# manually remove distance points for each centroid and keep 10 best points
filter_outliers <- function(df_in)
{
print(type(df_in))
df_in <- as.data.frame(df_in)
for(i in 30:11)
{
xhat <- mean(df_in[, c("x")])
yhat <- mean(df_in[, c("y")])
df_in$dx <- abs(xhat - df_in[, c("x")])
df_in$dy <- abs(yhat - df_in[, c("y")])
df_in$d  <- sqrt( (df_in$dx)**2 + (df_in$dy)**2)
df_in    <- df_in[order(df_in$d, decreasing=TRUE), ]
df_in    <- df_in[-1,]
}
return(df_in)
}
b <- data.frame()
for (i in seq(1,150, by=30) )
{
a <- filter_outliers(X[i:(i+(30-1)),])
a <- as.data.frame(a)
a$cluster <- toString(round(i/30)+1)
b <- rbind(b, a)
print(c(i,i+30-1))
print(a)
print(b)
}
# filter outliers
# manually remove distance points for each centroid and keep 10 best points
filter_outliers <- function(df_in)
{
print(typeof(df_in))
df_in <- as.data.frame(df_in)
for(i in 30:11)
{
xhat <- mean(df_in[, c("x")])
yhat <- mean(df_in[, c("y")])
df_in$dx <- abs(xhat - df_in[, c("x")])
df_in$dy <- abs(yhat - df_in[, c("y")])
df_in$d  <- sqrt( (df_in$dx)**2 + (df_in$dy)**2)
df_in    <- df_in[order(df_in$d, decreasing=TRUE), ]
df_in    <- df_in[-1,]
}
return(df_in)
}
b <- data.frame()
for (i in seq(1,150, by=30) )
{
a <- filter_outliers(X[i:(i+(30-1)),])
a <- as.data.frame(a)
a$cluster <- toString(round(i/30)+1)
b <- rbind(b, a)
print(c(i,i+30-1))
print(a)
print(b)
}
# filter outliers
# manually remove distance points for each centroid and keep 10 best points
filter_outliers <- function(df_in)
{
df_in <- as.data.frame(df_in)
print(typeof(df_in))
for(i in 30:11)
{
xhat <- mean(df_in[, c("x")])
yhat <- mean(df_in[, c("y")])
df_in$dx <- abs(xhat - df_in[, c("x")])
df_in$dy <- abs(yhat - df_in[, c("y")])
df_in$d  <- sqrt( (df_in$dx)**2 + (df_in$dy)**2)
df_in    <- df_in[order(df_in$d, decreasing=TRUE), ]
df_in    <- df_in[-1,]
}
return(df_in)
}
b <- data.frame()
for (i in seq(1,150, by=30) )
{
a <- filter_outliers(X[i:(i+(30-1)),])
a <- as.data.frame(a)
a$cluster <- toString(round(i/30)+1)
b <- rbind(b, a)
print(c(i,i+30-1))
print(a)
print(b)
}
ilter outliers
# manually remove distance points for each centroid and keep 10 best points
filter_outliers <- function(df_in)
{
#df_in <- as.data.frame(df_in)
for(i in 30:11)
{
xhat <- mean(df_in[, c("x")])
yhat <- mean(df_in[, c("y")])
df_in$dx <- abs(xhat - df_in[, c("x")])
df_in$dy <- abs(yhat - df_in[, c("y")])
df_in$d  <- sqrt( (df_in$dx)**2 + (df_in$dy)**2)
df_in    <- df_in[order(df_in$d, decreasing=TRUE), ]
df_in    <- df_in[-1,]
}
return(df_in)
}
b <- data.frame()
for (i in seq(1,150, by=30) )
{
a <- filter_outliers(X[i:(i+(30-1)),])
a <- as.data.frame(a)
a$cluster <- toString(round(i/30)+1)
b <- rbind(b, a)
print(c(i,i+30-1))
print(a)
print(b)
}
# manually remove distance points for each centroid and keep 10 best points
filter_outliers <- function(df_in)
{
for(i in 30:11)
{
xhat <- mean(df_in[, c("x")])
yhat <- mean(df_in[, c("y")])
df_in$dx <- abs(xhat - df_in[, c("x")])
df_in$dy <- abs(yhat - df_in[, c("y")])
df_in$d  <- sqrt( (df_in$dx)**2 + (df_in$dy)**2)
df_in    <- df_in[order(df_in$d, decreasing=TRUE), ]
df_in    <- df_in[-1,]
}
return(df_in)
}
# manually remove distance points for each centroid and keep 10 best points
filter_outliers <- function(df_in)
{
for(i in 30:11)
{
xhat <- mean(df_in[, c("x")])
yhat <- mean(df_in[, c("y")])
df_in$dx <- abs(xhat - df_in[, c("x")])
df_in$dy <- abs(yhat - df_in[, c("y")])
df_in$d  <- sqrt( (df_in$dx)**2 + (df_in$dy)**2)
df_in    <- df_in[order(df_in$d, decreasing=TRUE), ]
df_in    <- df_in[-1,]
}
return(df_in)
}
exec_outliers <- function(table_in, partition_size=30)
{
df <- data.frame()
for (i in seq(1,150, by=30) )
{
out <- as.data.frame( filter_outliers(table_in[i:(i+(30-1)),]) )
out$cluster <- toString(round(i/30)+1)
df <- rbind(df, out)
}
return (df)
}
filtered <- exec_outliers(X)
filtered
nrow(filtered)
clustered_filtered_outliers <- exec_outliers(X)
print(clustered_filtered_outliers)
